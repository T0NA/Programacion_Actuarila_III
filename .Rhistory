contador <- contador+1
}
z <- 5
contador <- 0
while (z>=3 && z<=10) {
matrix(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
z
matrix(z)
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(z) && c(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
matrix(z)
z
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(5 && z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
x
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(5:z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
x
contador
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c("z")
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(z,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(5:z,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(1:contador,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
print(z)
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- vector("character",z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
x
contador
#Matrices
m <- matrix(nrow = 2, ncol = 3)
m
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- matrix(z,1,1)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
x <- 1:3
y <- 10:12
#CBind, une columnas por columnas
cbind(x,y)
#RBind, une columnas por filas
rbind(x,y)
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- cbind(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- cbind(z,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
x
#Matrices
x <- matrix(1:4, nrow = 2, ncol = 2)
x
dimnames(m) <- list(c("a","b"),c("c","d"))
#Matrices
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
for(i in 1:10){
print (i)
}
for(i in 1:10){
print (c(i)
}
for(i in 1:10){
print (c(i))
}
c(i)
c(i,i,i,i,i,i)
for(i in 1:10){
dget (i)
}
for(i in 1:10){
dput (i)
}
dget(i)
i
c(i)
y <- dget(i)
y <- read.table(i)
y <- (i)
y
dput (i)
source (i)
for(i in 1:10){
c (i)
}
c(i)
for(i in 1:10){
t <- (i)
dim(t)
}
t
for(i in 1:10){
t <- dput(i)
}
c(t)
x[t]
#Ciclos For
for(i in 1:10){
t <- dput(i)
}
x[t]
x[i]
x[i]
x <- matrix(1:6,2,3)
x
#Si dejamos solamente el espacio, el resultado sera un vector
x[1, ]
#Si usamos un drop = FALSE el resultado sera una matriz
x[1, , drop = FALSE]
x <- list(aardvark = 1:5)
x$a
x[["a"]]
x[["a", exact = FALSE]]
x[1:10]
for(i in 1:10){
t <- print(i)
}
x[1:10]
x[t]
for(i in c("a","b","c")){
print (i)
}
x[i]
#Ciclos For
for(i in 1:10){
t <- print(i)
}
x[i]
x <- matrix(for(i in 1:10){
})
#Ciclos For
for(i in 1:10){
c(x) <- i
}
#Ciclos For
for(i in 1:10){
x <- character(i)
}
x
#Ciclos For
for(i in 1:10){
x <- intiger(i)
}
#Ciclos For
for(i in 1:10){
x <- integer(i)
}
x
#Ciclos For
for(i in 1:10){
x <- numeric(i)
}
x
#Ciclos For
for(i in 1:10){
x <- (i)
}
x
#Ciclos For
for(i in 1:10){
x <- matrix(i)
}
x
#Ciclos For
for(i in 1:10){
x <- character(iL)
}
#Ciclos For
for(i in 1:10){
x <- character(i)
}
x
#Ciclos For
for(i in 1:10){
x <- character(i,i)
}
#Ciclos For
for(i in 1:10){
x <- character(c(i))
}
x
#Ciclos For
for(i in 1:10){
x <- character(c(1:10))
}
#Ciclos For
for(i in 1:10){
x <- numeric(dim(i))
}
#Ciclos For
for(i in 1:10){
x <- numeric((i))
}
x
}
#Ciclos For
for(i in 1:10){
x <- numeric(print(i))
}
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- numeric(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- numeric(contador,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
z <- 5
contador <- 0
while (z>=3 && z<=10) {
z <- for (i in dim(z)) {
c(z)
}
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
z <- 5
contador <- 0
while (z>=3 && z<=10) {
z <- numeric(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
z
contador
contador
contador
source('~/GitHub/Programacion_Actuarila_III/Clase 07-03-2018 (Estructuras).R', echo=TRUE)
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- numeric(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(numeric(z))
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
z <- numeric(5)
contador <- 0
while (z>=3 && z<=10) {
x <- c(numeric(z))
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
z <- numeric(5)
contador <- 0
while (z>=3 && z<=10) {
x <- c(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
contador
matrix(z)
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- vector(z, contador)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- c(z, contador)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
x
z <- 5
contador <- 0
while (z>=3 && z<=10) {
x <- vector(contador, z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
}
z <- 5
contador <- 0
while (z>=3 && z<=10) {
moneda <- rbinom(1,1,0.5)
if(moneda==1){ #caminata aleatoria
z <- z+1
}else{
z <- z-1
}
contador <- contador+1
x <- vector(contador, z)
}
